Данная библиотека позволяет создавать базы данных(в том числе и темпоральные) на базе
СУБД PostgreSQL.
Для успешной работы библиотеки нужно:
1. Установить PostgreSQL: https://www.postgresql.org/download/

2. Установить библиотеку для создания БД:
    pip install git+https://github.com/Easycoding-art/Database_toolkit.git

3. В тестовом документе задать описание базы данных в следующем виде:

$temporal$
property<property_id>{
    id(integer)[user: user_id]"not_null",
    name(integer)
};
user<user_id>{
    user_id(integer),
    password(integer)
};
-----------------------------------------------------------------------------------------
$temporal$ - Показывает, что база данных темпоральная(вводится ряд ограничений). Не
обязательно.
property и user - названия таблиц
В <> пишется первичный ключ
В таблицах через запятую перечисляются названия столбцов. В () указывается тип данных
PostgreSQL. В [] через & пишутся отношения к столбцу в "формате таблица : столбец". В ""
через + перечисляются дополнительные сведения(можно указать свои на языке SQL).
Например:
default - COLLATE pg_catalog."default"
not_null - NOT NULL
auto_inkrement - GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 )
Ограничений на отступы нет.
4. При помощи библиотеки создать БД, передав в конструктор название, пароль PostgreSQL
и путь к файлу с описанием.

5. Метод fill_fake_data принимает словарь интервалов количества строк в виде 
кортежа(Например: {'user':(1, 200), 'adress':(1, 140)}), язык(по умолчанию "ru_RU"), режим автозаполнения
(по умолчанию True) и функции для генерации данных по ключам, совпадающих с названиями
столбцов(Например: user = get_users). Сигнатура каждой функции должна быть следующей:
def func(n: int) -> list
Названия полей, данные для которых генерируются автоматически: first_name, last_name,
full_name, email, password, phone_number, job, company, date, url, website.
Тексты на русском языке создает функция GetRandomText.

6. set_query в ответ на SQL-запрос возвращает датафрейм с результатом.